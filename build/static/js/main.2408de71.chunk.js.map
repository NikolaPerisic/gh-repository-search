{"version":3,"sources":["List.js","query.js","App.js","index.js"],"names":["list","props","react_default","a","createElement","className","href","url","target","name","stars","forks","description","query","App","state","variables","error","isLoaded","queryString","items","getRepos","_callee","response","regenerator_default","wrap","_context","prev","next","axios","post","headers","Authorization","concat","process","sent","_this","setState","data","search","edges","t0","stop","handleInputChange","e","value","preventDefault","handleSearch","newQueryTemplate","handleNewQuery","newQuery","this","inputValue","_this$state","errorMessage","loading","message","htmlFor","type","placeholder","onChange","onClick","map","item","key","List","node","resourcePath","stargazers","totalCount","updatedAt","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2408de71.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst list = props => {\n  return (\n    <div className=\"list-item\">\n      <div className=\"inline-item\">\n        <a href={props.url} target=\"blank\">\n          {props.name}\n        </a>\n        <p className=\"stars\">{props.stars}</p>\n        <p className=\"forks\">{props.forks}</p>\n      </div>\n      <p>{props.description}</p>\n    </div>\n  );\n};\nexport default list;\n","export const query = `\n{\n  search(query: \"javascript\", type: REPOSITORY, first: 10) {\n    repositoryCount\n    edges {\n      node {\n        ... on Repository {\n          name\n          url\n          resourcePath\n          description\n          stargazers {\n            totalCount\n          }\n          forks {\n            totalCount\n          }\n          updatedAt\n        }\n      }\n    }\n  }\n}\n`;\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport List from \"./List\";\nimport { query } from \"./query\";\n\nclass App extends React.Component {\n  state = {\n    query: query,\n    variables: {},\n    error: null,\n    isLoaded: false,\n    queryString: \"javascript\",\n    items: []\n  };\n  componentDidMount() {\n    this.getRepos(this.state.query, this.state.variables);\n  }\n  getRepos = async (query, variables) => {\n    try {\n      const response = await axios.post(\n        \"https://api.github.com/graphql\",\n        {\n          query,\n          variables\n        },\n        {\n          headers: {\n            Authorization: `token ${process.env.REACT_APP_TOKEN}`\n          }\n        }\n      );\n      this.setState(() => ({\n        isLoaded: true,\n        items: response.data.data.search.edges\n      }));\n    } catch (error) {\n      this.setState(() => ({ error }));\n    }\n  };\n  handleInputChange = e => {\n    this.setState({ queryString: e.target.value });\n    e.preventDefault();\n  };\n  handleSearch = () => {\n    const newQueryTemplate = this.handleNewQuery(this.state.queryString);\n    this.setState({ isLoaded: false });\n    this.getRepos(newQueryTemplate, this.state.variables);\n  };\n  handleNewQuery = newQuery => `\n  {\n    search(query: \"${newQuery}\", type: REPOSITORY, first: 10) {\n      repositoryCount\n      edges {\n        node {\n          ... on Repository {\n            name\n            url\n            resourcePath\n            description\n            stargazers {\n              totalCount\n            }\n            forks {\n              totalCount\n            }\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n  `;\n\n  render() {\n    const inputValue = this.state.queryString;\n    const { error, isLoaded, items } = this.state;\n    let errorMessage = null,\n      loading = null;\n    if (error) errorMessage = <div>{error.message}</div>;\n    if (!isLoaded) loading = <div>Loading...</div>;\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <div className=\"label\">Github repository search</div>\n          <label htmlFor=\"search\">\n            <input\n              type=\"text\"\n              name=\"search\"\n              value={inputValue}\n              placeholder=\"search...\"\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <button type=\"submit\" onClick={this.handleSearch}>\n            Search\n          </button>\n          <div className=\"results\">\n            {error ? errorMessage : loading}\n            {items.map((item, key) => {\n              return (\n                <List\n                  key={key}\n                  description={item.node.description}\n                  url={item.node.url}\n                  name={item.node.resourcePath}\n                  stars={item.node.stargazers.totalCount}\n                  forks={item.node.forks.totalCount}\n                  updatedAt={item.node.updatedAt}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}