{"version":3,"sources":["List.js","query.js","App.js","index.js"],"names":["list","props","react_default","a","createElement","className","href","url","target","name","stars","forks","description","query","variables","first","after","type","App","state","error","isLoaded","queryString","items","pageInfo","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","_this","length","addContent","getRepos","_callee","response","newItems","regenerator_default","wrap","_context","prev","next","axios","post","headers","Authorization","concat","process","sent","Object","toConsumableArray","data","search","edges","setState","t0","stop","handleInputChange","e","value","handleSearch","preventDefault","newVariables","endCursor","this","addEventListener","removeEventListener","inputValue","_this$state","errorMessage","loading","message","onSubmit","htmlFor","placeholder","onChange","map","item","key","List","node","resourcePath","stargazers","totalCount","updatedAt","style","display","React","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.2b903416.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst list = props => {\n  return (\n    <div className=\"list-item\">\n      <div className=\"inline-item\">\n        <a href={props.url} target=\"blank\">\n          {props.name}\n        </a>\n        <p className=\"stars\">{props.stars}</p>\n        <p className=\"forks\">{props.forks}</p>\n      </div>\n      <p>{props.description}</p>\n    </div>\n  );\n};\nexport default list;\n","export const query = `\nquery($first: Int!, $after: String, $query: String!, $type: SearchType!)\n{\n  search(first: $first, after: $after, query: $query, type: $type) {\n    edges {\n      node {\n        ... on Repository {\n          name\n          url\n          resourcePath\n          description\n          stargazers {\n            totalCount\n          }\n          forks {\n            totalCount\n          }\n          updatedAt\n        }\n      }\n    }\n    pageInfo {\n      startCursor\n      hasNextPage\n      endCursor\n    }\n  }\n}\n`;\nexport const variables = {\n  first: 15,\n  after: null,\n  query: \"javascript\",\n  type: \"REPOSITORY\"\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport List from \"./List\";\nimport { query } from \"./query\";\nimport { variables } from \"./query\";\n\nclass App extends React.Component {\n  state = {\n    query: query,\n    variables: variables,\n    error: null,\n    isLoaded: false,\n    queryString: \"javascript\",\n    items: [],\n    pageInfo: {}\n  };\n  componentDidMount() {\n    this.getRepos(this.state.query, this.state.variables);\n    window.addEventListener(\"scroll\", this.onScroll, false);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.onScroll, false);\n  }\n  onScroll = () => {\n    if (\n      window.innerHeight + window.scrollY >= document.body.offsetHeight - 100 &&\n      this.state.items.length &&\n      this.state.isLoaded\n    ) {\n      this.addContent();\n    }\n  };\n  getRepos = async (query, variables) => {\n    try {\n      const response = await axios.post(\n        \"https://api.github.com/graphql\",\n        {\n          query,\n          variables\n        },\n        {\n          headers: {\n            Authorization: `token ${process.env.REACT_APP_TOKEN}`\n          }\n        }\n      );\n      let newItems = [...this.state.items].concat(\n        response.data.data.search.edges\n      );\n      this.setState(() => ({\n        isLoaded: true,\n        items: newItems,\n        pageInfo: response.data.data.search.pageInfo\n      }));\n    } catch (error) {\n      this.setState(() => ({ error }));\n    }\n  };\n  handleInputChange = e => {\n    this.setState({ queryString: e.target.value });\n  };\n  handleSearch = e => {\n    e.preventDefault();\n    let newVariables = this.state.variables;\n    newVariables.query = this.state.queryString;\n    this.setState({ variables: newVariables, isLoaded: false, items: [] });\n    this.getRepos(this.state.query, this.state.variables);\n  };\n  addContent = () => {\n    let newVariables = this.state.variables;\n    newVariables.after = this.state.pageInfo.endCursor;\n    this.setState({ isLoaded: false });\n    this.getRepos(this.state.query, newVariables);\n  };\n  render() {\n    const inputValue = this.state.queryString;\n    const { error, isLoaded, items } = this.state;\n    let errorMessage = null,\n      loading = null;\n    if (error) errorMessage = <div>{error.message}</div>;\n    if (!isLoaded) loading = <div className=\"loading-text\">Loading...</div>;\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <div className=\"label\">Github repository search</div>\n          <p className=\"label-caption\">Scrolling just got more fun</p>\n          <div>\n            <form className=\"search\" onSubmit={this.handleSearch}>\n              <label htmlFor=\"search\" />\n              <input\n                type=\"text\"\n                name=\"search\"\n                value={inputValue}\n                placeholder=\"search...\"\n                onChange={this.handleInputChange}\n              />\n              <button type=\"submit\">Search</button>\n            </form>\n          </div>\n\n          <div className=\"results\">\n            {error ? errorMessage : loading}\n            {items.map((item, key) => {\n              return (\n                <List\n                  key={key}\n                  description={item.node.description}\n                  url={item.node.url}\n                  name={item.node.resourcePath}\n                  stars={item.node.stargazers.totalCount}\n                  forks={item.node.forks.totalCount}\n                  updatedAt={item.node.updatedAt}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"loader\"\n            style={\n              this.state.isLoaded ? { display: \"none\" } : { display: \"unset\" }\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}